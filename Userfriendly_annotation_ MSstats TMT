#Reaname column name according to Diffrent version PSMs file:

#main header names change code
Changecolname <- function(non_edited_PSMs){
  editedPSMsfile <-non_edited_PSMs %>% 
    rename_at(vars(starts_with(c("12"))), dplyr::funs(str_replace(., "^", "Abundance.."))) %>% 
    rename_at(vars(starts_with(c("13"))), dplyr::funs(str_replace(., "^", "Abundance.."))) %>% 
    dplyr::rename_all(list(~make.names(.)))
  editedPSMsfile
}
editedPSMsfile <- Changecolname(non_edited_PSMs)
############################################################
#clean data 
#############################################################
#generate RUn IDS data frame:
extract_data<-function(PSMs_clean){
    Annotation3<-data.frame(unique(PSMs_clean$Spectrum.File))
    Annotation3$Fraction=Annotation3$unique.PSMs_clean.Spectrum.File.
  return(Annotation3)
}

###############################################################
#finding pattern and unique Id for simplicity of user
Pattern <- function (Annotation3){
  pattern1 <-stri_match_first_regex(Annotation3$Fraction,"[:upper:][:digit:][:digit:][:punct:]|[:upper:][:digit:][:punct:]")[,1]
      RunID<- str_split(Annotation3$Fraction,pattern1,simplify = TRUE)[,1]
      RunID_uniqe <- unique(RunID)
      RunID_uniqe <-data.frame( RunID_uniqe )
      size_RunID = dim(RunID_uniqe)
      Fra_userinput<- matrix(  , nrow = size_RunID[1], ncol = 1)
  for (i in 1:size_RunID[1]){
    print ( RunID_uniqe[i,1])
    Fra_userinput[i,1] <-readline(prompt="what is your Fraction name assigned in PD, please spesify return value with F1,F2,...,Fn ?")
    #F1="DMSO_1"
    #F2="DMSO_2"
    #F3="655_1"
    #F4="655_2"  
    
    }
  #Fra_userinput
}
###################################################################
#Generating the Data frame consist of Annotation file columns
Annotation3$Fraction=RunID
Annotation3$Mixture <- ""
Annotation3$TechRepMixture <- ""
Annotation3$Channel <- ""
Annotation3$BioReplicate <- ""
Annotation3$Condition<- "" 


#change FRaction name according to user information:
testtesttes<-for (i in 1:size_RunID[1]){
  gsub(RunID_uniqe[i,1],Fra_userinput[i,1],Annotation3 $Fraction)
}

#generate Mixture information
Annotation3<-Annotation3 %>% dplyr::mutate (Mixture="Empty")

#generate Techrepmicture information
Annotation3<- Annotation3 %>% dplyr::mutate (TechRepMixture=1)

#rearrange column Run for easier generating the channel's column
Annotation3 <- Annotation3[order(Annotation3[,1]),]

#generate  TMT10channel 
TMT10= c("126","127N","127C","128N","128C", "129N", "129C","130N", "130C", "131")
N2<-NROW(unique(Annotation3[,1]))
Annotation3 <-Annotation3 %>% dplyr::mutate (Channel = rep(TMT10,N2))

#generate condition column
Annotation3 <-Annotation3  %>% dplyr::mutate(Condition = ifelse(Channel == 126, "Norm",ifelse(Fraction == "F1" | Fraction == "F2",0,1)) )

#generate Bioreplicate column
Annotation3 <-Annotation3  %>% dplyr::mutate(BioReplicate = ifelse(Fraction == "F1" | Fraction == "F3",1,2) )








 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
